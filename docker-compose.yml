services:
  # ----------------------------------------------------
  # Laravel PHP-FPM Application Service (app)
  # ----------------------------------------------------
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        PHP_VERSION: '8.3'
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
    networks:
      - laravel-network
    depends_on:
      - mysql

  # ----------------------------------------------------
  # Nginx Web Server Service (webserver)
  # ----------------------------------------------------
  webserver:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel-network
    depends_on:
      - app

  # ----------------------------------------------------
  # React Frontend Service (frontend)
  # ----------------------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: react-app
    container_name: react-frontend
    restart: unless-stopped
    tty: true
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8081}
    networks:
      - laravel-network
    stdin_open: true
    command: npm run start

  # ----------------------------------------------------
  # MySQL Database Service (mysql)
  # ----------------------------------------------------
  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    ports:
      - "${FORWARD_DB_PORT:-33069}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - laravel_mysql_data:/var/lib/mysql
    networks:
      - laravel-network

# ----------------------------------------------------
# Networks and Volumes for persistence
# ----------------------------------------------------
networks:
  laravel-network:
    driver: bridge

volumes:
  laravel_mysql_data:
    driver: local